version: "3"
services:
  web-server:
    image: emission/test-server:latest
    depends_on:
      - db
    environment:
      - DB_HOST=db$ctr
      - WEB_SERVER_HOST=0.0.0.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      #ENV VAR FOR RUNTIME PORT MAPPING
      - $PORTMAP
    links:
      - db:db$ctr
    networks:
      - emission
  db:
    image: emission/mongo-custom:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    privileged: true

    #Volumes is the preferred way to persist data generated by a container. In this case we use a volume to persist the contents
    #of the data base. Learn more about how to use volumes here: https://docs.docker.com/storage/volumes/
    # And learn how to configure volumes in your compose file here: https://docs.docker.com/compose/compose-file/#volume-configuration-reference
    volumes:
      - mongo-data-raw:/raw
    networks:
       - emission

networks:
  emission:
    external: True

volumes:
  mongo-data-raw:
